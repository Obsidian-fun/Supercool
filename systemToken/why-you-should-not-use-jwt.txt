Edit: After researching on JWT tokens, I've come to the conclusion that this is not a good form of authentication. Instead, this will be a new method of managing sessions -

1. Generate a 36 alphanumeric value from a cryptographically secure string from /dev/urandom.
2. Store that string with the uuid of the user in a redis cache. This string will represent the user session.
3. Set a Time to live (TTL) of 2 hours for each session.
4. Once the TTL is reached the session string is deleted and the user is redirected back to the login,


Sources:
https://news.ycombinator.com/item?id=27625822
https://news.ycombinator.com/item?id=27136539
https://news.ycombinator.com/item?id=14292223
https://www.youtube.com/watch?v=I7gQTBYmEEg

Reddit Post,

Issue: I wanted to use Json Web Tokens(JWT) for validating users sessions. However, upon reading sources (mentioned below), I have decided that an alternative would be necessary.
I was considering using 36 alphanumeric values from /dev/urandom and storing the string into a Redis database with a time-to-live (TTL) for 2 hours. Would this be to hampering on performance and would this have security issues?

Another option would be to use express-session but that would mean using compatible session storage from this list , and more load on the webserver.

Background: The application is a chatroom, if you are interested in the code, here is the link to the github repo, https://github.com/Obsidian-fun/Supercool

***Sources on JWT concerns,

    https://news.ycombinator.com/item?id=27625822

    https://news.ycombinator.com/item?id=27136539

    https://news.ycombinator.com/item?id=14292223

    https://www.youtube.com/watch?v=I7gQTBYmEEg
